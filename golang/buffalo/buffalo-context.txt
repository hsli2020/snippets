type Context interface {
  context.Context
  Response() http.ResponseWriter
  Request() *http.Request
  Session() *Session
  Cookies() *Cookies
  Params() ParamValues
  Param(string) string
  Set(string, interface{})
  LogField(string, interface{})
  LogFields(map[string]interface{})
  Logger() Logger
  Bind(interface{}) error
  Render(int, render.Renderer) error
  Error(int, error) error
  Redirect(int, string, ...interface{}) error
  Data() map[string]interface{}
  Flash() *Flash
  File(string) (binding.File, error)
}

What's in the Context
=====================

Buffalo stuffs the context of each request with a lot of information that could be useful in 
your application, Below is a list of what Buffalo adds to the context on each request that 
you can access from in your actions or templates.

Key 	        Type 	Usage
------------------------------------------------------------------------------------------------
app 	        *buffalo.App 	        The current Buffalo application that's running.
env 	        string 	                The current environment the app is running in. 
                                        Example: test, development, production
routes 	        buffalo.RouteList 	    A list of all of the routes mapped on the application.
current_route 	buffalo.RouteInfo 	    The current route that is being accessed.
current_path 	string 	                The current path being requested. Example: /users/1/edit
*Path 	        RouteHelperFunc 	    Helpers to create paths based off of mapped routes. 
                                        Example: editUserPath. 
                                        Run buffalo task routes to see a full list for your app.
params 	        map[string]string 	    Query parameters for the requested page.
flash 	        map[string][]string 	A map of messages set using buffalo.Context#Flash.
session 	    *buffalo.Session 	    The current user's session.
request 	    *http.Request 	        The current request.
tx 	            *pop.Connection 	    Only set if using the 
                                        github.com/gobuffalo/buffalo/middleware.PopTransaction 
                                        middleware (on by default).

All routing in Buffalo results in the calling of a buffalo.Handler function. 
The signature for a buffalo.Handler looks like this:

func (c buffalo.Context) error {
  // do some work
}

a.GET("/coke", CokeHandler).Name("customPath")

<a href="<%= customPath() %>">Coke</a>

a.GET("/users/{name}", func (c buffalo.Context) error {
  return c.Render(200, r.String(c.Param("name")))
})
